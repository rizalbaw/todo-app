{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"http://localhost:4000\";\nexport const getTodos = async () => {\n  try {\n    const todos = await axios.get(baseUrl + \"/todos\");\n    return todos;\n  } catch (error) {\n    throw new Error(\"error\");\n  }\n};\nexport const addTodo = async formData => {\n  try {\n    const todo = {\n      name: formData.name,\n      description: formData.description,\n      status: false\n    };\n    const saveTodo = await axios.post(baseUrl + \"/add-todo\", todo);\n    return saveTodo;\n  } catch (error) {\n    throw new Error(\"error\");\n  }\n};\nexport const updateTodo = async todo => {\n  try {\n    const todoUpdate = {\n      status: true\n    };\n    const updatedTodo = await axios.put(`${baseUrl}/edit-todo/${todo._id}`, todoUpdate);\n    return updatedTodo;\n  } catch (error) {\n    throw new Error(\"error\");\n  }\n};\nexport const deleteTodo = async _id => {\n  try {\n    const deletedTodo = await axios.delete(`${baseUrl}/delete-todo/${_id}`);\n    return deletedTodo;\n  } catch (error) {\n    throw new Error(\"error\");\n  }\n};","map":{"version":3,"sources":["/home/baw/Project/todo-app/client/src/API.ts"],"names":["axios","baseUrl","getTodos","todos","get","error","Error","addTodo","formData","todo","name","description","status","saveTodo","post","updateTodo","todoUpdate","updatedTodo","put","_id","deleteTodo","deletedTodo","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,MAAMC,OAAe,GAAG,uBAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAiD;AACrE,MAAI;AACA,UAAMC,KAAiC,GAAG,MAAMH,KAAK,CAACI,GAAN,CAC5CH,OAAO,GAAG,QADkC,CAAhD;AAGA,WAAOE,KAAP;AACH,GALD,CAKE,OAAOE,KAAP,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,OAAV,CAAN;AACH;AACJ,CATM;AAWP,OAAO,MAAMC,OAAO,GAAG,MACnBC,QADmB,IAEqB;AACxC,MAAI;AACF,UAAMC,IAAwB,GAAG;AAC/BC,MAAAA,IAAI,EAAEF,QAAQ,CAACE,IADgB;AAE/BC,MAAAA,WAAW,EAAEH,QAAQ,CAACG,WAFS;AAG/BC,MAAAA,MAAM,EAAE;AAHuB,KAAjC;AAKA,UAAMC,QAAoC,GAAG,MAAMb,KAAK,CAACc,IAAN,CACjDb,OAAO,GAAG,WADuC,EAEjDQ,IAFiD,CAAnD;AAIA,WAAOI,QAAP;AACD,GAXD,CAWE,OAAOR,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAU,OAAV,CAAN;AACD;AACF,CAjBI;AAmBL,OAAO,MAAMS,UAAU,GAAG,MACxBN,IADwB,IAEgB;AACxC,MAAI;AACF,UAAMO,UAAiC,GAAG;AACxCJ,MAAAA,MAAM,EAAE;AADgC,KAA1C;AAGA,UAAMK,WAAuC,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CACnD,GAAEjB,OAAQ,cAAaQ,IAAI,CAACU,GAAI,EADmB,EAEpDH,UAFoD,CAAtD;AAIA,WAAOC,WAAP;AACD,GATD,CASE,OAAOZ,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAU,OAAV,CAAN;AACD;AACF,CAfM;AAgBP,OAAO,MAAMc,UAAU,GAAG,MACxBD,GADwB,IAEgB;AACxC,MAAI;AACF,UAAME,WAAuC,GAAG,MAAMrB,KAAK,CAACsB,MAAN,CACnD,GAAErB,OAAQ,gBAAekB,GAAI,EADsB,CAAtD;AAGA,WAAOE,WAAP;AACD,GALD,CAKE,OAAOhB,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAU,OAAV,CAAN;AACD;AACF,CAXM","sourcesContent":["import axios, { AxiosResponse } from \"axios\"\n\nconst baseUrl: string = \"http://localhost:4000\"\n\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const todos: AxiosResponse<ApiDataType> = await axios.get(\n            baseUrl + \"/todos\"\n        )\n        return todos\n    } catch (error) {\n        throw new Error(\"error\")\n    }\n}\n\nexport const addTodo = async (\n    formData: ITodo\n  ): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n      const todo: Omit<ITodo, \"_id\"> = {\n        name: formData.name,\n        description: formData.description,\n        status: false,\n      }\n      const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\n        baseUrl + \"/add-todo\",\n        todo\n      )\n      return saveTodo\n    } catch (error) {\n      throw new Error(\"error\")\n    }\n  }\n\n  export const updateTodo = async (\n    todo: ITodo\n  ): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n      const todoUpdate: Pick<ITodo, \"status\"> = {\n        status: true,\n      }\n      const updatedTodo: AxiosResponse<ApiDataType> = await axios.put(\n        `${baseUrl}/edit-todo/${todo._id}`,\n        todoUpdate\n      )\n      return updatedTodo\n    } catch (error) {\n      throw new Error(\"error\")\n    }\n  }\n  export const deleteTodo = async (\n    _id: string\n  ): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n      const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(\n        `${baseUrl}/delete-todo/${_id}`\n      )\n      return deletedTodo\n    } catch (error) {\n      throw new Error(\"error\")\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}